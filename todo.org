* concurrent job execution with ensure_future

* use connection pool
  Concurrent job execution blocked by single redis connection.

* use task local variables instead of rq.local module

* python 3.5 async/await syntax support
  - async for job in Queue

* subscribing for registries

* yield from job.wait_result
  It must return after:
  - worker process done this task
  - task was failed

* redis bluster support

* eta

* rate limit
