* concurrent job execution with ensure_future
** extract protocol layer
   We can't use connection pull *and* pipelines without explicit entry points.
** adapt jobs, queues and workers to use this protocol layer
** use redis connection pool
   Concurrent job execution blocked by single redis connection.
* remove rq dependency
** abandon connections module
   Pass explicit pool parameter for job, queue and worker.
** remove resolve_connection function
* python 3.5 async/await syntax support
  - async for job in Queue
* yield from job.wait_result
  It must return after worker process done this task or task was failed.
* redis bluster support
* eta
* rate limit
